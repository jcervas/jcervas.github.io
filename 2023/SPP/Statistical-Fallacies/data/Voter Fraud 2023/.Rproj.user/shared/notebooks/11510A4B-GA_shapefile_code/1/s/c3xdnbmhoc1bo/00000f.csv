"0","# Block group variables"
"0","All_COUNTYFP <- unique(Precinct_Border_crs$COUNTYFP) # Vector of all county codes"
"0",""
"0","census_BlockGroup_variables <- c("
"0","                            ""B28002_001"", # Internet Access (Estimate!!Total:)"
"0","                            ""B28002_013"", # Internet Access (Estimate!!Total:!!No Internet access)"
"0","                            ""B01002_001"",	# Estimate!!Median age --!!Total"
"0","                            ""B19013_001"",	# Estimate!!Median household income in the past 12 months (in 2020 inflation-adjusted dollars)"
"0","                            "
"0","                            ""B25045_001"", # Estimate!!Total:"
"0","                            ""B25045_012"", # Estimate!!Total:!!Renter occupied:!!No vehicle available:"
"0","                            ""B25045_003"" # Estimate!!Total:!!Owner occupied:!!No vehicle available:"
"0","                            ) # Census block variables for aggregation"
"0","# tidycensus::get_acs(geography = ""block group"", # Un-comment to re-download data"
"0","#                     variables = census_BlockGroup_variables,"
"0","#                     year = 2020,"
"0","#                     state = ""13"","
"0","#                     county = All_COUNTYFP,"
"0","#                     geometry = FALSE,"
"0","#                     survey = ""acs5"","
"0","#                     cache_table = TRUE) %>%"
"0","#   dplyr::select(!moe) %>%"
"0","#   pivot_wider(names_from = variable,"
"0","#               values_from = c(estimate)) %>%"
"0","#   openxlsx::write.xlsx(file = BlockGroup_data_file, rowNames = FALSE, overwrite = TRUE)"
"0","census_BlockGroup_data <- read_excel(BlockGroup_data_file) %>% "
"0","  dplyr::rename(Age = B01002_001, income = B19013_001) %>% "
"0","  dplyr::mutate_all(.funs = list(~ ifelse(is.na(.) == TRUE, rnorm("
"0","    sum(is.na(.) == TRUE), "
"0","    mean = median(., na.rm = TRUE), "
"0","    sd = sd(., na.rm = TRUE)), .)))"
"0",""
"0","census_BlockGroup_variables <- c(""Age"", ""income"", ""B28002_013"", ""B28002_001"","
"0","                                 ""B25045_001"", ""B25045_012"", ""B25045_003"")"
"0",""
"0","sf::sf_use_s2(FALSE) # This is required to fix an error (does not appear to affect results)"
"0","County_BlockGroup <- sf::st_read(BlockGroup_shapefile) %>%"
"0","  dplyr::rename(GEOID20_census = GEOID) %>% "
"0","  right_join(census_BlockGroup_data, by = c(""GEOID20_census"" = ""GEOID"")) %>% # Combine Census data with block geography"
"0","  base::subset(COUNTYFP %in% All_COUNTYFP) %>% # Select blocks for all relevant counties"
"0","  st_transform(crs = CRS) %>% "
"0","  dplyr::mutate(area_original = st_area(geometry)) # Measure the original area of the blocks"
"1","Reading layer `"
"1","tl_2020_13_bg"
"1","' from data source "
"1","`"
"1","C:\Users\seanj\Desktop\Project Directory\Voter Fraud 2023\GA\GA_2020_Blockgroup"
"1","' "
"1","using driver `"
"1","ESRI Shapefile"
"1","'"
"1","
"
"1","Simple feature collection with 7446 features and 12 fields"
"1","
"
"1","Geometry type: MULTIPOLYGON
"
"1","Dimension:     XY
"
"1","Bounding box:  "
"1","xmin: -85.60516 ymin: 30.35576 xmax: -80.78296 ymax: 35.0013"
"1","
"
"1","Geodetic CRS:  NAD83
"
"0","BlockGroup_overlap <- sf::st_intersection(Wall_conglomerate_Precinct, County_BlockGroup) %>% # Area Calculation"
"0","  dplyr::mutate(area_modified = st_area(geometry), area_multiplier = as.numeric(area_modified / area_original)) %>%"
"0","  sf::st_drop_geometry() # Trims blocks into respective precincts and assigns precinct ID to block"
"2","although coordinates are longitude/latitude, st_intersection assumes that they are planar
"
"0","BlockGroup_overlap$area_multiplier[BlockGroup_overlap$area_multiplier > 1] <- 1 # Fixes apparent rounding error"
"0","BlockGroup_overlap[census_BlockGroup_variables] <- BlockGroup_overlap[,census_BlockGroup_variables] * BlockGroup_overlap[,""area_multiplier""] # Adjusts variables by proportion of precinct overlap"
"0",""
"0","Block_overlap_summarise <- BlockGroup_overlap %>% # Sum blocks to precinct level"
"0","  dplyr::group_by(GEOID) %>% "
"0","  dplyr::summarise_at(vars(census_BlockGroup_variables), sum, na.rm = TRUE) %>% "
"0","  dplyr::select(c(""GEOID""), census_BlockGroup_variables) %>% "
"0","  right_join(Block_overlap_summarise, by = ""GEOID"") %>% "
"0","  as.data.frame() %>% "
"0","  dplyr::mutate(Internet = B28002_013 / B28002_001,"
"0","                Internet = ifelse(is.infinite(Internet), 0, Internet),"
"0","                vehicle = (B25045_012 + B25045_003) / B25045_001,"
"0","                vehicle = ifelse(is.infinite(vehicle), 0, vehicle))"
"0",""
"0","census_block_variables = c(""Minority"", ""Age"", ""income"", ""Internet"", ""vehicle"")"
