"0","State_Precinct_County_Spatial <- State_Precinct_County %>% # Convert precincts to spatial format for matching"
"0","  sf::as_Spatial()"
"0",""
"0","Adjacent_Precinct_County_Wall <- spdep::poly2nb(sp::as.SpatialPolygons.PolygonsList(State_Precinct_County_Spatial@polygons), "
"0","                                         snap = poly2nb_snap) # Initialize matching list"
"0",""
"0","# precinct matching pairs"
"0","length_index <- sapply(Adjacent_Precinct_County_Wall, length) # Create matched precinct column"
"0","length_index_vec <- numeric(0)"
"0","for (i in 1:length(length_index)) {"
"0","  vec <- numeric(length_index[i])"
"0","  vec[1:length_index[i]] <- i"
"0","  length_index_vec <- c(length_index_vec, vec)"
"0","}"
"0",""
"0","Adjacent_Precinct_County_Wall <- Adjacent_Precinct_County_Wall %>% # Create inner ring match list"
"0","  unlist() %>% cbind(length_index_vec) %>% # Create Counterpart matched precinct column"
"0","  as.data.frame() %>% "
"0","  janitor::clean_names() %>% "
"0","  dplyr::rename(GEOID_B = x, GEOID_C = length_index_vec) %>%"
"0","  dplyr::mutate(GEOID_B = State_Precinct_County$GEOID20[GEOID_B],"
"0","                GEOID_C = State_Precinct_County$GEOID20[GEOID_C]) %>% "
"0","  base::subset(GEOID_B %in% Precinct_Interior$GEOID) %>% "
"0","  base::subset(!GEOID_C %in% Precinct_Interior$GEOID)"
"0",""
"0","# Centroid initialization (for plots)"
"0","Precinct_Centroid_2nd <- rbind(st_transform(subset(State_Precinct_County, "
"0","                                                   GEOID20 %in% unique(Adjacent_Precinct_County_Wall$GEOID_C)), crs = CRS), "
"0","                           st_transform(subset(State_Precinct_County, "
"0","                                               GEOID20 %in% unique(Adjacent_Precinct_County_Wall$GEOID_B)), crs = CRS)) %>% "
"0","  dplyr::select(GEOID20, geometry) %>%"
"0","  mutate(geometry = st_point_on_surface(geometry))"
"0",""
"0","df <- Adjacent_Precinct_County_Wall %>% "
"0","  left_join(dplyr::rename(Precinct_Centroid_2nd, GEOID_B = GEOID20), by = c(""GEOID_B"")) %>% "
"0","  left_join(dplyr::rename(Precinct_Centroid_2nd, GEOID_C = GEOID20), by = c(""GEOID_C""))"
"0",""
"0","mach_lines_2nd <- st_sfc(mapply(function(a,b){st_cast(st_union(a,b),""LINESTRING"")}, # Create lines for plots"
"0","                                df$geometry.x, df$geometry.y, SIMPLIFY=FALSE), crs = CRS)"
"0",""
"0","plot_PA_Precinct_mach_lines <- ggplot() +"
"0","  geom_sf(data = subset(State_Precinct_County, GEOID20 %in% unique(Adjacent_Precinct_County_Wall$GEOID_C)), "
"0","          color = ""black"", fill = ""dodgerblue4"") +"
"0","  geom_sf(data = Precinct_Exterior, color = ""black"", fill = ""#d59d9e"") +"
"0","  geom_sf(data = Precinct_Interior, color = ""black"", fill = ""dodgerblue2"") +"
"0","  geom_sf(data = subset(us_county, GEOID == County_GEOID), color = ""red"", fill = NA) +"
"0","  geom_sf(data = mach_lines_2nd, color = ""magenta3"") +"
"0","  geom_sf(data = Precinct_Centroid_2nd, color = ""gray15"") +"
"0","  geom_sf(data = mach_lines, color = ""deepskyblue1"") +"
"0","  geom_sf(data = Precinct_Centroid, color = ""gray15"") +"
"0","  coord_sf()+"
"0","  theme_void()+"
"0","  scale_fill_viridis(discrete = TRUE)+"
"0","  ggtitle(""Allegheny County, Pennsylvania"") +"
"0","  labs(caption = ""Figure iii"") +"
"0","  theme(legend.position = ""none"", plot.title = element_text(hjust = 0.5, size=35),"
"0","        plot.caption = element_text(hjust = 0.5, size=20))"
"0","plot_PA_Precinct_mach_lines"
