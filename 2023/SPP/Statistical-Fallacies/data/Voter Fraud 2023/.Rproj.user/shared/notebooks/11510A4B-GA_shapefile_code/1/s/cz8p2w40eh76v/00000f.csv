"0","# Identify adjacent counties: tangent to Fulton"
"0",""
"0","us_county_state <- us_county %>%  # Subsetting state's county level geometries: Georgia"
"0","  subset(STATEFP == State_fips)"
"0","row.names(us_county_state) <- NULL # Row numbers needed to be resequenced"
"0",""
"0","us_county_state_OGR <- us_county_OGR %>% # Subsetting state's county level geometries in Spatial polygon"
"0","  subset(STATEFP == State_fips)"
"0",""
"0","us_county_state_Adjacent_Matrix <- us_county_state_OGR %>% # Create logical matrix of which geometries are tangent"
"0","  rgeos::gTouches(byid=TRUE)"
"0","rownames(us_county_state_Adjacent_Matrix) <- us_county_state$GEOID # IDs set to match County shapefile"
"0","colnames(us_county_state_Adjacent_Matrix) <- us_county_state$GEOID"
"0",""
"0","# Adjacent County geometry"
"0","Adjacent_County_Geometry <- us_county_state[which( # subsetted adjacent counties: tangent to Allegheny"
"0","  as.data.frame(us_county_state_Adjacent_Matrix)[,which(us_county_state$GEOID == County_GEOID)]"
"0","  ),] %>% "
"0","  dplyr::select(GEOID, geometry, COUNTYFP) # Only necessary variables"
"0",""
"0","# Standardized columns"
"0","State_Precinct_County_GEO <- State_Precinct_County %>% # Standardized columns for combination"
"0","  dplyr::rename(GEOID = GEOID20, COUNTYFP = COUNTYFP20) %>%"
"0","  dplyr::select(GEOID, geometry, COUNTYFP)"
"0",""
"0","row.names(Adjacent_County_Geometry) <- NULL"
"0","row.names(State_Precinct_County_GEO) <- NULL"
